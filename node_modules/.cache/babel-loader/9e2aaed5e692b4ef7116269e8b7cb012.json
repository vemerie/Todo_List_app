{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport TodoList from '../components/index';\nimport '../style.css';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getInitialProps\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://localhost/3000/api/data');\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                shows: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main\"\n      }, React.createElement(TodoList, {\n        todoInitial: this.props.shows\n      }), React.createElement(\"p\", null, \" Copyright @ Ezeh Victor\"), React.createElement(\"p\", {\n        className: \"small\"\n      }, \"email:vim64@yahoo.com\"));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport { Main as default };","map":{"version":3,"sources":["/home/viktor/Desktop/vim/Enye/Victor_Todolist_Enye/pages/index.js"],"names":["React","Component","TodoList","Main","fetch","res","json","data","shows","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,cAAP;;IAEqBC,I;;;;;;;;;;;;;;;;;;;;;;6BAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIC,KAAK,CAAC,iCAAD,CADT;;AAAA;AACRC,cAAAA,GADQ;AAAA;AAAA,qBAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERC,cAAAA,IAFQ;AAAA,+CAIP;AACLC,gBAAAA,KAAK,EAAED;AADF,eAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAVT;AACL,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKE,KAAL,CAAWD;AAAlC,QADJ,EAEI,0DAFJ,EAGK;AAAG,QAAA,SAAS,EAAC;AAAb,iCAHL,CADJ;AAOH;;;;EAT6BP,S;;SAAbE,I","sourcesContent":["import React, { Component } from 'react'\nimport TodoList from '../components/index'\nimport '../style.css';\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <div className=\"main\">\n                <TodoList todoInitial={this.props.shows}/>\n                <p> Copyright @ Ezeh Victor</p>\n                 <p className='small'>email:vim64@yahoo.com</p>\n            </div>\n        )\n    }\n\n    getInitialProps = async function() {\n        const res = await fetch('https://localhost/3000/api/data')\n        const data = await res.json()\n        // console.log(`Show data fetched. Count: ${data.length}`)\n        return {\n          shows: data\n        }\n\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}